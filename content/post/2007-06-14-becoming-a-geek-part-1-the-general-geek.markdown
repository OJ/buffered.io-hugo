---
categories:
- Being in the Industry
- HOWTO
comments: true
date: 2007-06-14T00:00:00Z
title: 'Becoming a Geek Part 1: The General Geek'
---

Contrary to popular belief, there are many types of geek. In this series, I'm going to give some basic tips on how to become one!  This is the first part in the series, and so I'm covering the 'General Geek'.

Before I even went to university to get qualifications to become an official "paid" geek, I put a great deal of time and effort into tuning my skills in other areas that would help me excel at my job. Below is a list of things that I did which I believe really helped me achieve my goal, and I would recommend doing the same if you're looking to become a paid geek yourself!

<!--more-->
<ol><li><strong>Learn to touch-type.</strong> When I say touch-type, what I mean is "typing without having to look at the keyboard for <em>any</em> reason". Fast typing while looking at the keyboard doesn't count ;) Get yourself a typing tutor and invest half an hour per day for a few months. Before you know it, you'll be setting the keyboard on fire. (<em>Hint: if you can't stop looking at the keys, put a tea-towel over your hands and keyboard!</em>)</li><li><strong>Learn an operating system (or two).</strong> It doesn't matter which one it is, but it's probably a good idea to go for the one that you plan to work with. I'm sure we've all had our fair share of meetings with people who consider themselves to be computer literate, and yet they struggle with basic file management tasks. Using a computer during the day does <em>not</em> make you computer literate. Do yourself a favour, get down and dirty with your OS, and learn how to:<ul><li>... install the OS from scratch.</li><li>... manage files.</li><li>... manage disks.</li><li>... install/uninstall applications.</li><li>... upgrade and patch your OS.</li><li>... add/remove users.</li><li>... write files to DVD/CD.</li><li>... rip albums to a music player.</li><li>... move around applications in general (ie. get used to common menu items, and where to find them)</li><li>... etc</li></ul>Getting this kind of knowledge puts you ahead of a surprising amount of people! It's also a good idea to get an idea of the different operating systems that are avialable, as you'll never know when you might be thrown in front of one of them!</li><li><strong>Learn your hardware.</strong> By this I don't mean that you need to be able to recite tech specs as they would appear on <a href="http://www.tomshardware.com/" title="Tom's Hardware">Tom's Hardware</a>. What I mean is learn what your computer is made of (<a href="http://en.wikipedia.org/wiki/Motherboard" title="Motherboard">motherboard</a>, <a href="http://en.wikipedia.org/wiki/Random_access_memory" title="Random Access Memory">RAM</a>, <a href="http://en.wikipedia.org/wiki/Central_processing_unit" title="Central Processing Unit">CPU</a>, etc). Determine the function of each of the bits, and the affect that they all have on your system. Understand what it means to upgrade something (eg. add more RAM) and how that will affect your computing experience.</li><li><strong>Set up a home network.</strong> This will give you the grounding that you'll need to understand the basics of networking (<a href="http://en.wikipedia.org/wiki/List_of_network_protocols" title="List of Networking Protocols">networking protocols</a>, <a href="http://en.wikipedia.org/wiki/List_of_network_protocols" title="IP Address">IP addresses</a>, <a href="http://en.wikipedia.org/wiki/Dynamic_Host_Configuration_Protocol" title="Dynamic Host Configuration Protocol">DHCP</a>, etc). This is particularly handy for anyone who is going to build web applications, or spend a lot of time in a networked environment.</li><li><strong>Learn about the web.</strong> Find out what that '<a href="http://en.wikipedia.org/wiki/HTTP" title="HTTP">http</a>' thing means, and figure out the difference between that and '<a href="http://en.wikipedia.org/wiki/HTTPS" title="HTTPS">https</a>'. Get a basic idea of what happens when you click on a link in your browser. Understand the stages that the whole process goes through from the point you've pressed the mouse button to the point where you've got a fully loaded page on screen.</li><li><strong>Get familiar with a programming language.</strong> This is obviously geared towards the potential coders out there. If you're going to learn to write software, then you're better off playing with one or two languages before you start any formal work or training.</li><li><strong>Speak to some geeks.</strong> Jump on some online forums. Read some blogs. Communicate with the geek community. Learn from their mistakes!</li><li><strong>Make your own mistakes.</strong> This is by far the best way to learn. If things just work first-time/every-time you'll miss out. There's no better way to learn how something works than fixing it when it's broken!</li><li><strong>Stay in touch.</strong> Make sure you keep up to speed with tech, by reading news and RSS feeds (such as <a href="http://www.engadget.com/" title="Engadget">Engadget</a> and <a href="http://www.slashdot.org/" title="/.">Slashdot</a>).</li><li><strong>Give something back</strong> Write a blog yourself. Write a tutorial. Help people on forums on topics that you've struggled with. This will force you to make sure you know what it is you're talking about :) It's also very rewarding.</li></ol>

Do you guys have any other suggestions?
